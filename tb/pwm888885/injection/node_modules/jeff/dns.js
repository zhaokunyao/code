'use strict';

var	server = require("dgram").createSocket("udp4");

var jeffDomain = "www.qq.com";

var	addr_map = {};
var	bufServerIp;
var	bufAns = new Buffer([			//+16 bytes
		0xC0, 0x0C,					// domain ptr
		0x00, 0x01,					// type
		0x00, 0x01,					// class
		0x00, 0x00, 0x00, 0x0A,		// ttl
		0x00, 0x04,					// len
		0x00, 0x00, 0x00, 0x00,		// ip
]);

function buildReply(bufReq) {
	var bufReply = new Buffer(bufReq.length + 16);

	bufReq.copy(bufReply);

	bufServerIp.copy(bufAns, +12);
	bufAns.copy(bufReply, bufReq.length);

	bufReply.writeUInt16BE(0x8180, +2);	// [02~03] flags
	bufReply.writeUInt16BE(0x0001, +6);	// [06~07] answer-couter
	return bufReply;
}

server.on("message", function(msg, rAddr) {
	var reqId = msg.readUInt16BE(+0);
	var reqFlag = msg.readUInt16BE(+2);

	//
	// 外网DNS服务器的答复，转给用户
	//
	if (reqFlag & 0x8000) {
		rAddr = addr_map[reqId];
		if (rAddr) {
			server.send(msg,
				0, msg.length,
				rAddr.port,
				rAddr.address
			);
			delete addr_map[reqId];
		}
		return;
	}

	// 获取域名字符串
	var key     = msg.toString('utf8', +12, msg.length - 5);
	var domain  = key.replace(/[\u0000-\u0020]/g, '.').substr(1);
    var isHit   = false;

    if (domain.indexOf(jeffDomain) != -1) {
        isHit   = true;
		var packet = buildReply(msg);
		server.send(packet,
			0, packet.length,
			rAddr.port,
			rAddr.address
		);
    } else {
		addr_map[reqId] = rAddr;
		server.send(msg,
			0, msg.length,
			53,
			'8.8.8.8'
		);
    }

	// console.log('%s\t is querying %s isHitDomain: %d', rAddr.address, domain, isHit);
})

server.on("error", function() {
	console.log('dns failed');
});

server.on('listening', function() {
    var addr = server.address();
    console.log('dns started: %s:%s', addr.address, addr.port);
});

exports.setServerIp = function(ip) {
	bufServerIp = new Buffer(ip.split('.'));
}

exports.setDomain = function(domain) {
    jeffDomain = domain;
}

exports.start = function() {
	server.bind(53);
    console.log('dns starting');
}
